{"version":3,"sources":["abi sync /^/.//.*/.json$","utils.tsx","pages/vesting_page.tsx","lib/utilities.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","numberWithCommas","n","parts","toString","split","replace","loadContract","filename","address","abi","require","web3","Web3","givenProvider","eth","Contract","configureBSC","a","detectEthereumProvider","mustBeMetaMask","provider","console","log","request","method","activeChain","process","REACT_APP_ACTIVE_CHAIN","params","chainId","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","error","on","window","location","reload","VestingPage","REACT_APP_SUPPLY_PRIVATE","REACT_APP_SUPPLY_STRATEGIC","REACT_APP_TOTAL_VESTING","REACT_APP_TOTAL_DAILY","REACT_APP_TOTAL_BANTER","props","contract","useState","startTime","setStartTime","totalReleased","setTotalReleased","totalAvailable","setTotalAvailable","showData","setShowData","start","methods","call","getTotalReleased","from","parseFloat","utils","fromWei","toFixed","getAvailableAmount","balances","setInterval","claim","withdraw","send","response","status","className","Date","Number","toLocaleString","onClick","ellipseAddress","width","slice","web3Modal","Web3Modal","network","cacheProvider","providerOptions","initialState","web3Provider","reducer","state","action","type","App","useReducer","dispatch","vestingContract","setVestingContract","useEffect","vesting","connect","useCallback","providers","Web3Provider","signer","getSigner","getAddress","getNetwork","disconnect","clearCachedProvider","cachedProvider","handleAccountsChanged","accounts","handleChainChanged","_hexChainId","handleDisconnect","removeListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a91f8165.chunk.js","sourcesContent":["var map = {\n\t\"./MscpToken.json\": 580,\n\t\"./MscpVesting.json\": 581,\n\t\"./MscpVesting30M.json\": 582,\n\t\"./MscpVesting5M.json\": 583,\n\t\"./TeamVesting.json\": 584\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 579;","import Web3 from \"web3\";\nimport detectEthereumProvider from '@metamask/detect-provider';\n\nexport function numberWithCommas(n: number) {\n    var parts = n.toString().split(\".\");\n    return parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + (parts[1] ? \".\" + parts[1] : \"\");\n}\n\nexport const loadContract = async (filename: string, address: string) => {\n    const abi = require(`./abi/${filename}.json`);\n    const web3 = new Web3(Web3.givenProvider);\n    return new web3.eth.Contract(abi, address);\n}\n\nexport const configureMoonbaseAlpha = async () => {\n    const provider = await detectEthereumProvider({ mustBeMetaMask: true }) as any;\n    if (provider) {\n        console.log(provider, 'provider');\n        try {\n            await provider.request({ method: \"eth_requestAccounts\" });\n            const activeChain = process.env.REACT_APP_ACTIVE_CHAIN as string;\n            console.log(typeof activeChain, 'activeChain');\n            switch (activeChain) {\n                case '4':\n                    console.log('change to rinkeby')\n                    await provider.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [{ chainId: \"0x4\" }]\n                    });\n                    break;\n                case '1287':\n                    await provider.request({\n                        method: \"wallet_addEthereumChain\",\n                        params: [\n                            {\n                                chainId: \"0x507\",\n                                chainName: \"Moonbase Alpha\",\n                                nativeCurrency: {\n                                    name: 'DEV',\n                                    symbol: 'DEV',\n                                    decimals: 18\n                                },\n                                rpcUrls: [\"https://rpc.testnet.moonbeam.network\"],\n                                blockExplorerUrls: [\"https://moonbase-blockscout.testnet.moonbeam.network/\"]\n                            },\n                        ]\n                    })\n                    await provider.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [{ chainId: \"0x507\" }]\n                    });\n                    break;\n                case '1285':\n                    await provider.request({\n                        method: \"wallet_addEthereumChain\",\n                        params: [\n                            {\n                                chainId: \"0x505\",\n                                chainName: \"Moonriver\",\n                                nativeCurrency: {\n                                    name: 'MOVR',\n                                    symbol: 'MOVR',\n                                    decimals: 18\n                                },\n                                rpcUrls: [\"https://rpc.moonriver.moonbeam.network\"],\n                                blockExplorerUrls: [\"https://blockscout.moonriver.moonbeam.network/\"]\n                            },\n                        ]\n                    })\n                    await provider.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [{ chainId: \"0x505\" }]\n                    });\n                    break;\n\n                default:\n                    break;\n            }\n        } catch (e) {\n            console.error(e);\n        }\n\n        provider.on(\"chainChanged\", () => {\n            window.location.reload()\n        })\n    } else {\n        console.error(\"Please install MetaMask\");\n    }\n}\n\nexport const configureBSC = async () => {\n    const provider = await detectEthereumProvider({ mustBeMetaMask: true }) as any;\n    if (provider) {\n        console.log(provider, 'provider');\n        try {\n            await provider.request({ method: \"eth_requestAccounts\" });\n            const activeChain = process.env.REACT_APP_ACTIVE_CHAIN as string;\n            console.log(typeof activeChain, 'activeChain');\n            switch (activeChain) {\n                case '97':\n                    await provider.request({\n                        method: \"wallet_addEthereumChain\",\n                        params: [\n                            {\n                                chainId: \"0x61\",\n                                chainName: \"Binance Smart Chain Testnet\",\n                                nativeCurrency: {\n                                    name: 'BNB',\n                                    symbol: 'BNB',\n                                    decimals: 18\n                                },\n                                rpcUrls: [\"https://data-seed-prebsc-1-s1.binance.org:8545\"],\n                            },\n                        ]\n                    })\n                    await provider.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [{ chainId: \"0x61\" }]\n                    });\n                    break;\n                case '56':\n                    await provider.request({\n                        method: \"wallet_addEthereumChain\",\n                        params: [\n                            {\n                                chainId: \"0x38\",\n                                chainName: \"Binance Smart Chain\",\n                                nativeCurrency: {\n                                    name: 'BNB',\n                                    symbol: 'BNB',\n                                    decimals: 18\n                                },\n                                rpcUrls: [\"https://bsc-dataseed.binance.org\t\"],\n                            },\n                        ]\n                    })\n                    await provider.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [{ chainId: \"0x38\" }]\n                    });\n                    break;\n\n                default:\n                    break;\n            }\n        } catch (e) {\n            console.error(e);\n        }\n\n        provider.on(\"chainChanged\", () => {\n            window.location.reload()\n        })\n    } else {\n        console.error(\"Please install MetaMask\");\n    }\n}\n\nexport const renderer = ({ years, days, hours, minutes, seconds, completed }: any) => {\n    return <span>{years}y {days}d {hours}h {minutes}m {seconds}s</span>;\n};\n\nexport const REACT_APP_DURATION = process.env.REACT_APP_DURATION as string; //150 days\nexport const SUPPLY_PRIVATE = process.env.REACT_APP_SUPPLY_PRIVATE as string;\nexport const SUPPLY_STRATEGIC = process.env.REACT_APP_SUPPLY_STRATEGIC as string;\n\nexport const BONUS_PRIVATE = 1500000;\nexport const BONUS_STRATEGIC = 2000000;\n\nexport const TOTAL_VESTING = process.env.REACT_APP_TOTAL_VESTING as string;\nexport const TOTAL_DAILY = process.env.REACT_APP_TOTAL_DAILY as string;\nexport const TOTAL_BANTER = process.env.REACT_APP_TOTAL_BANTER as string;\n","import { useState } from \"react\"\nimport Countdown from \"react-countdown\";\nimport Web3 from \"web3\";\nimport { REACT_APP_DURATION, numberWithCommas, renderer, TOTAL_VESTING } from \"../utils\"\n\nconst VestingPage = (props: any) => {\n  const { address, contract } = props;\n  const [startTime, setStartTime] = useState<any>(0);\n  const [totalReleased, setTotalReleased] = useState<any>(0);\n  const [totalAvailable, setTotalAvailable] = useState<any>(0);\n  const [isStrategic, setIsStrategic] = useState<any>(false);\n  const [showData, setShowData] = useState<any>(false);\n\n  let start = (async () => {\n    if (contract) {\n      console.log('contract', contract);\n      const startTime = await contract.methods.startTime().call();\n      setStartTime(startTime);\n      // if (startTime <= Math.round(new Date().getTime() / 1000)) {\n      //   if (showData === false) {\n      //     setShowData(true)\n      //   }\n      // }\n      if (address) {\n        let totalReleased = await contract.methods.getTotalReleased().call({ from: address });\n        totalReleased = parseFloat(Web3.utils.fromWei(totalReleased, \"ether\")).toFixed(6);\n        // console.log(totalReleased, 'totalReleased');\n        setTotalReleased(totalReleased);\n        let totalAvailable = await contract.methods.getAvailableAmount().call({ from: address });\n        totalAvailable = parseFloat(Web3.utils.fromWei(totalAvailable, \"ether\")).toFixed(6);\n        // console.log(totalAvailable, 'totalAvailable');\n        // if (totalAvailable.toString().substr(-4) === \"e+59\") {\n        //   setTotalAvailable(0);\n        // } else {\n        setTotalAvailable(totalAvailable);\n        // }\n        const balances = await contract.methods.balances(address).call()\n        console.log(balances, 'balances');\n        // setIsStrategic(balances.strategicInvestor);\n\n        setShowData(true)\n      } else {\n        setTotalAvailable(0);\n        setTotalReleased(0);\n      }\n    }\n\n  })\n\n  start();\n\n  setInterval(async () => {\n    start();\n  }, 1000 * 60)\n\n\n\n  const claim = async () => {\n    const response = await contract.methods.withdraw().send({ from: address });\n    if (response && response.status === true) {\n      let totalReleased = await contract.methods.getTotalReleased().call({ from: address });\n      totalReleased = parseFloat(Web3.utils.fromWei(totalReleased, \"ether\")).toFixed(6);\n      setTotalReleased(totalReleased);\n\n      let totalAvailable = await contract.methods.getAvailableAmount().call({ from: address });\n      totalAvailable = parseFloat(Web3.utils.fromWei(totalAvailable, \"ether\")).toFixed(6);\n      setTotalAvailable(totalAvailable);\n    }\n  }\n\n  return (\n    <div className=\"popup\">\n      <div className=\"popup-inner\">\n        <h1>\n          Team Token Vesting\n        </h1>\n        <div className=\"info-list\" >\n          <div className=\"info-list--item\">\n            <p>\n              Total claimed\n            </p>\n\n            <p className=\"number\">\n              {(!showData) ? '???' : numberWithCommas(totalReleased)} CWS\n            </p>\n          </div>\n\n          <div className=\"info-list--item\">\n            <p>\n              Available to claim\n            </p>\n\n            <p className=\"number\">\n              {(!showData) ? '???' : numberWithCommas(totalAvailable)} CWS\n            </p>\n          </div>\n\n          <div className=\"info-list--item\">\n            <p>\n              Vesting ends on\n            </p>\n\n            <p className=\"number\">\n              {(!showData || !startTime) ? '???' : new Date(startTime * 1000 + Number(REACT_APP_DURATION)).toLocaleString()}\n            </p>\n          </div>\n        </div>\n        <span className=\"spacer\"></span>\n        <button className={`claim-btn ${(address && showData && totalAvailable > 0) ? 'active' : 'inactive'}`} onClick={() => {\n          if (address && totalAvailable > 0) {\n            claim();\n          }\n        }}>\n          Claim\n        </button>\n      </div>\n    </div>\n  );\n}\nexport default VestingPage;","import supportedChains from './chains'\nimport { IChainData } from './types'\n\nexport function getChainData(chainId?: number): any {\n  if (!chainId) {\n    return null\n  }\n  const chainData = supportedChains.filter(\n    (chain: any) => chain.chain_id === chainId\n  )[0]\n\n  if (!chainData) {\n    throw new Error('ChainId missing or not supported')\n  }\n\n  const API_KEY = '460f40a260564ac4a4f4b3fffb032dad'\n\n  if (\n    chainData.rpc_url.includes('infura.io') &&\n    chainData.rpc_url.includes('%API_KEY%') &&\n    API_KEY\n  ) {\n    const rpcUrl = chainData.rpc_url.replace('%API_KEY%', API_KEY)\n\n    return {\n      ...chainData,\n      rpc_url: rpcUrl,\n    }\n  }\n\n  return chainData\n}\n\nexport function ellipseAddress(address = '', width = 10): string {\n  if (!address) {\n    return ''\n  }\n  return `${address.slice(0, width)}...${address.slice(-width)}`\n}","import React, { useState } from \"react\";\nimport './App.css';\nimport VestingPage from './pages/vesting_page';\nimport { providers } from 'ethers'\nimport { useCallback, useEffect, useReducer } from 'react'\nimport Web3Modal from 'web3modal'\nimport { ellipseAddress } from './lib/utilities'\n\nimport { configureBSC, loadContract } from \"./utils\";\n\nconst providerOptions = {};\nlet web3Modal: any\nif (typeof window !== 'undefined') {\n  web3Modal = new Web3Modal({\n    network: 'mainnet', // optional\n    cacheProvider: true,\n    providerOptions, // required\n  })\n}\n\ntype StateType = {\n  provider?: any\n  web3Provider?: any\n  address?: string\n  chainId?: number\n}\n\ntype ActionType =\n  | {\n    type: 'SET_WEB3_PROVIDER'\n    provider?: StateType['provider']\n    web3Provider?: StateType['web3Provider']\n    address?: StateType['address']\n    chainId?: StateType['chainId']\n  }\n  | {\n    type: 'SET_ADDRESS'\n    address?: StateType['address']\n  }\n  | {\n    type: 'SET_CHAIN_ID'\n    chainId?: StateType['chainId']\n  }\n  | {\n    type: 'RESET_WEB3_PROVIDER'\n  }\n\n\nconst initialState: StateType = {\n  provider: null,\n  web3Provider: null,\n  address: null as any,\n  chainId: null as any,\n}\n\nfunction reducer(state: StateType, action: ActionType): StateType {\n  switch (action.type) {\n    case 'SET_WEB3_PROVIDER':\n      return {\n        ...state,\n        provider: action.provider,\n        web3Provider: action.web3Provider,\n        address: action.address,\n        chainId: action.chainId,\n      }\n    case 'SET_ADDRESS':\n      return {\n        ...state,\n        address: action.address,\n      }\n    case 'SET_CHAIN_ID':\n      return {\n        ...state,\n        chainId: action.chainId,\n      }\n    case 'RESET_WEB3_PROVIDER':\n      return initialState\n    default:\n      throw new Error()\n  }\n}\n\n\n/// web 3 end\n\nconst App = () => {\n\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { provider, address } = state;\n  const [vestingContract, setVestingContract] = useState<any>(null);\n\n  // \n\n  useEffect(() => {\n    (async () => {\n      configureBSC();\n      const vesting = await loadContract(\"TeamVesting\", process.env.REACT_APP_VESTING_ADDRESS as string);\n      (window as any).vesting = vesting;\n      setVestingContract(vesting);\n    })()\n  }, [])\n\n  const connect = useCallback(async function () {\n    const provider = await web3Modal.connect()\n    const web3Provider = new providers.Web3Provider(provider)\n\n    const signer = web3Provider.getSigner()\n    const address = await signer.getAddress()\n\n    const network = await web3Provider.getNetwork()\n\n\n\n\n\n    dispatch({\n      type: 'SET_WEB3_PROVIDER',\n      provider,\n      web3Provider,\n      address,\n      chainId: network.chainId,\n    })\n  }, [])\n\n\n  const disconnect = useCallback(\n    async function () {\n      await web3Modal.clearCachedProvider()\n      if (provider?.disconnect && typeof provider.disconnect === 'function') {\n        await provider.disconnect()\n      }\n      dispatch({\n        type: 'RESET_WEB3_PROVIDER',\n      })\n    },\n    [provider]\n  )\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      connect()\n    }\n  }, [connect])\n\n\n  useEffect(() => {\n    if (provider?.on) {\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log('accountsChanged', accounts)\n        dispatch({\n          type: 'SET_ADDRESS',\n          address: accounts[0],\n        })\n      }\n\n      const handleChainChanged = (_hexChainId: string) => {\n        window.location.reload()\n      }\n\n      const handleDisconnect = (error: { code: number; message: string }) => {\n        console.log('disconnect', error)\n        disconnect()\n      }\n\n      provider.on('accountsChanged', handleAccountsChanged)\n      provider.on('chainChanged', handleChainChanged)\n      provider.on('disconnect', handleDisconnect)\n\n      return () => {\n        if (provider.removeListener) {\n          provider.removeListener('accountsChanged', handleAccountsChanged)\n          provider.removeListener('chainChanged', handleChainChanged)\n          provider.removeListener('disconnect', handleDisconnect)\n        }\n      }\n    }\n  }, [provider, disconnect])\n\n  return (\n    <div>\n      <header>\n        <div className=\"wallet-section\">\n          {!address && <button\n            className=\"connect-btn\" id=\"btn-connect\"\n            onClick={async () => {\n              console.log('cicked');\n              connect();\n            }}\n          >\n            Connect wallet\n          </button>}\n\n          {address && <div>\n            <p>\n              {ellipseAddress(address)}\n            </p> <button\n              className=\"connect-btn\" id=\"btn-connect\"\n              onClick={async () => {\n                console.log('cicked');\n                disconnect();\n              }}\n            >\n              Disconnect\n            </button>\n          </div>}\n        </div>\n      </header>\n      <VestingPage address={address} contract={vestingContract} />\n    </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Web3ReactProvider, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector'\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from '@web3-react/frame-connector'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Web3ReactProvider getLibrary={getLibrary}> */}\n    {/* <HashRouter> */}\n    <App />\n    {/* </HashRouter> */}\n    {/* </Web3ReactProvider> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}